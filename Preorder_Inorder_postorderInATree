#include <iostream>
using namespace std;
//input-8 10 1 -1 -1 6 4 -1 -1 7 -1 -1 3 -1 14 13 -1 -1 -1

class node{
public:
    int data;
    node* left , *right;
    node(int d): data(d) , left(NULL) , right(NULL){}
};

node* CreateTree()
{
 node* root=NULL;
 int data;
 cin>>data;

 if(data==-1)
    return root;
 else{
    root=new node(data);
    root->left=CreateTree();
    root->right=CreateTree();
    }
 return root;
}


void preorder(node* root)
{
    //base case
    if(root==NULL)
     return;

 //recursive case
 cout<<root->data<<" ";
 preorder(root->left);
 preorder(root->right);

}

void inorder(node* root)
{

    //base case
    if(root==NULL)
     return;

 //recursive case
 inorder(root->left);
  cout<<root->data<<" ";
 inorder(root->right);
}

void postorder(node* root)
{
     //base case
    if(root==NULL)
     return;

 //recursive case
 postorder(root->left);
 postorder(root->right);
  cout<<root->data<<" ";
}

int main()
{
    node* root=NULL;
    root=CreateTree();
    //mirror(root);

    cout<<"PRE:";
    preorder(root);
    cout<<endl;
    cout<<"IN:";
    inorder(root);
    cout<<endl;
    cout<<"POST:";
    postorder(root);
    cout<<endl;

   
  
   return 0;
}
